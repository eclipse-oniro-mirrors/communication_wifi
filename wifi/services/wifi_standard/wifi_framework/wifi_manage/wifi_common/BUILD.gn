# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")
  import("//foundation/communication/wifi/wifi/wifi_lite.gni")
} else {
  import("//build/ohos.gni")
  import("//build/ohos/sa_profile/sa_profile.gni")
  import("//build/ohos_var.gni")
  import("//foundation/communication/wifi/wifi/wifi.gni")
}
if (defined(ohos_lite)) {
  shared_library("wifi_common_service") {
    sources = [
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_common/wifi_permission_helper.cpp",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_common/wifi_permission_utils.cpp",
      "wifi_auth_center.cpp",
      "wifi_config_center.cpp",
      "wifi_dumper.cpp",
      "wifi_internal_event_dispatcher_lite.cpp",
      "wifi_protect.cpp",
      "wifi_protect_manager.cpp",
      "wifi_system_ability_listerner.cpp",
    ]

    include_dirs = [
      "$WIFI_ROOT_DIR/base/state_machine/include",
      "$WIFI_ROOT_DIR/base/cRPC/include",
      "$WIFI_ROOT_DIR/interfaces/inner_api",
      "$WIFI_ROOT_DIR/frameworks/native/include",
      "$WIFI_ROOT_DIR/frameworks/native/interfaces",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/include",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/config",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_common",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_controller",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_native/common",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_native/wifi_hal_interface",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_native/client/idl_client",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_native/client/idl_client/idl_interface",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_sta",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_sta_sa",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_scan",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_scan_sa",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_sub_manage",
      "$DHCP_ROOT_DIR/interfaces/inner_api/include",
      "$DHCP_ROOT_DIR/interfaces/inner_api/interfaces",
      "$WIFI_ROOT_DIR/utils/inc",
      "//base/hiviewdfx/hilog_lite/interfaces/native/innerkits",
      "//foundation/systemabilitymgr/samgr_lite/interfaces/innerkits/registry",
      "//foundation/systemabilitymgr/samgr_lite/interfaces/innerkits/samgr",
      "//third_party/bounds_checking_function/include",
      "$WIFI_ROOT_DIR/services/wifi_standard/include",
    ]

    deps = [
      "$WIFI_ROOT_DIR/base:wifi_base_without_crpc",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_native:wifi_native",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit:wifi_toolkit",
      "$WIFI_ROOT_DIR/utils:wifi_utils",
      "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
      "//foundation/systemabilitymgr/samgr_lite/samgr:samgr",
    ]

    external_deps = [ "bounds_checking_function:libsec_shared" ]

    defines = [
      "OHOS_ARCH_LITE",
      "STA_INSTANCE_MAX_NUM=$wifi_feature_with_sta_num",
      "AP_INSTANCE_MAX_NUM=$wifi_feature_with_ap_num",
    ]

    if (wifi_feature_with_auth_disable) {
      defines += [ "PERMISSION_ALWAYS_GRANT" ]
    }

    configs -= [ "//build/lite/config:language_cpp" ]
    cflags_cc = [
      "-std=c++17",
      "-fno-rtti",
    ]
  }
} else {
  ohos_shared_library("wifi_common_service") {
    branch_protector_ret = "pac_ret"

    sanitize = {
      cfi = true
      boundary_sanitize = true
      cfi_cross_dso = true
      debug = false
    }
    install_enable = true
    include_dirs = [
      "$WIFI_ROOT_DIR/interfaces/inner_api",
      "$WIFI_ROOT_DIR/frameworks/native/interfaces",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/include",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/config",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_common/app_network_speed_limit",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_common",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_controller",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_native/common",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_native/hal_device_manage",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_native/wifi_hal_interface",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_native/client/idl_client",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_native/client/idl_client/idl_interface",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_sta",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_sta_sa",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_scan",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_scan_sa",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_self_cure",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_sub_manage",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap_sa",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_p2p",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_p2p/hid2d",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_p2p_sa",
      "$WIFI_ROOT_DIR/utils/inc",
      "$WIFI_ROOT_DIR/services/wifi_standard/include",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_common/wifi_country_code",
    ]
    sources = [
      "app_network_speed_limit/app_network_speed_limit_service.cpp",
      "app_network_speed_limit/speed_limit_configs_writer.cpp",
      "wifi_app_state_aware.cpp",
      "wifi_auth_center.cpp",
      "wifi_cmd_client.cpp",
      "wifi_config_center.cpp",
      "wifi_country_code/wifi_country_code_manager.cpp",
      "wifi_country_code/wifi_country_code_policy.cpp",
      "wifi_datashare_utils.cpp",
      "wifi_dumper.cpp",
      "wifi_internal_event_dispatcher.cpp",
      "wifi_net_agent.cpp",
      "wifi_net_observer.cpp",
      "wifi_permission_helper.cpp",
      "wifi_permission_utils.cpp",
      "wifi_protect.cpp",
      "wifi_protect_manager.cpp",
      "wifi_system_ability_listerner.cpp",
      "wifi_system_timer.cpp",
    ]

    deps = [
      "$WIFI_ROOT_DIR/base:wifi_base_without_crpc",
      "$WIFI_ROOT_DIR/services/wifi_standard/etc/init:etc",
      "$WIFI_ROOT_DIR/services/wifi_standard/etc/param:etc",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_native:wifi_native",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit:wifi_toolkit",
      "$WIFI_ROOT_DIR/utils:wifi_utils",
    ]

    external_deps = [
      "ability_base:want",
      "ability_base:zuri",
      "ability_runtime:ability_manager",
      "ability_runtime:app_context",
      "ability_runtime:app_manager",
      "ability_runtime:connection_obs_manager",
      "ability_runtime:dataobs_manager",
      "ability_runtime:wantagent_innerkits",
      "access_token:libaccesstoken_sdk",
      "access_token:libtokenid_sdk",
      "bundle_framework:appexecfwk_base",
      "bundle_framework:appexecfwk_core",
      "c_utils:utils",
      "common_event_service:cesfwk_innerkits",
      "data_share:datashare_common",
      "data_share:datashare_consumer",
      "hilog:libhilog",
      "ipc:ipc_single",
      "netmanager_base:net_conn_manager_if",
      "netmanager_base:net_native_manager_if",
      "safwk:system_ability_fwk",
      "samgr:samgr_proxy",
      "time_service:time_client",
    ]
    if (wifi_feature_with_encryption) {
      external_deps += [ "huks:libhukssdk" ]
    }
    defines = [
      "FEATURE_AP_SUPPORT",
      "FEATURE_STA_SUPPORT",
      "STA_INSTANCE_MAX_NUM=$wifi_feature_with_sta_num",
      "AP_INSTANCE_MAX_NUM=$wifi_feature_with_ap_num",
      "FEATURE_SELF_CURE_SUPPORT",
    ]

    if (is_asan) {
      defines += [ "DTFUZZ_TEST" ]
    }

    if (defined(global_parts_info) &&
        defined(global_parts_info.telephony_core_service)) {
      external_deps += [ "core_service:tel_core_service_api" ]
      defines += [ "TELEPHONE_CORE_SERVICE_ENABLE" ]
    }

    if (defined(global_parts_info) && defined(global_parts_info.global_i18n)) {
      external_deps += [ "i18n:intl_util" ]
      defines += [ "I18N_INTL_UTIL_ENABLE" ]
    }

    if (defined(global_parts_info) &&
        defined(global_parts_info.powermgr_battery_manager)) {
      external_deps += [ "battery_manager:batterysrv_client" ]
      defines += [ "HAS_BATTERY_MANAGER_PART" ]
    }

    if (defined(global_parts_info) &&
        defined(global_parts_info.msdp_movement)) {
      external_deps += [ "movement:movement_client" ]
      defines += [ "HAS_MOVEMENT_PART" ]
    }

    if (defined(global_parts_info) &&
        defined(global_parts_info.powermgr_power_manager)) {
      external_deps += [ "power_manager:powermgr_client" ]
      defines += [ "HAS_POWERMGR_PART" ]
    }

    if (defined(global_parts_info) &&
        defined(global_parts_info.account_os_account)) {
      external_deps += [ "os_account:os_account_innerkits" ]
      defines += [ "HAS_ACCOUNT_PART" ]
    }

    if (wifi_feature_with_app_frozen) {
      defines += [ "FEATURE_APP_FROZEN" ]
    }

    if (wifi_feature_with_auth_disable) {
      defines += [ "PERMISSION_ALWAYS_GRANT" ]
    }

    if (wifi_feature_with_encryption) {
      defines += [ "FEATURE_ENCRYPTION_SUPPORT" ]
    }

    if (wifi_feature_with_p2p) {
      defines += [ "FEATURE_P2P_SUPPORT" ]
    }

    if (wifi_feature_with_ap_extension) {
      defines += [ "FEATURE_AP_EXTENSION" ]
    }

    if (wifi_feature_sta_ap_exclusion) {
      defines += [ "FEATURE_STA_AP_EXCLUSION" ]
    }

    if (wifi_feature_with_random_mac_addr) {
      defines += [ "SUPPORT_RANDOM_MAC_ADDR" ]
    }

    if (wifi_feature_with_hpf_supported) {
      defines += [ "FEATURE_HPF_SUPPORT" ]
    }

    if (wifi_feature_with_hdi_chip_supported) {
      defines += [ "HDI_CHIP_INTERFACE_SUPPORT" ]
      external_deps += [ "drivers_interface_wlan:libchip_proxy_1.0" ]
    }

    part_name = "wifi"
    subsystem_name = "communication"
  }
}
