1.0 {
    global:
        "*SetBgLimitMode*";
        "*SetBgLimitIdList*";
        "*SetUidPids*";
        "*WifiAuthCenter*";
        "*WifiPermissionHelper*";
        "*WifiPermissionUtils*";
        "*WifiProtect*";
        "*LibraryUtils*";
        "*DelInterfaceAddress*";
        "*NetworkStatusHistoryManager*";
        "*WifiSysTimer*";
        "*HasHotspotRemote*";
        "*HasP2pRemote*";
   extern "C++" {
        "OHOS::Wifi::AppNetworkSpeedLimitService::GetInstance()";
        "OHOS::Wifi::AppNetworkSpeedLimitService::GetStaCallback() const";
        "OHOS::Wifi::AppNetworkSpeedLimitService::HandleForegroundAppChangedAction(const AppExecFwk::AppStateData &)";
        "OHOS::Wifi::AppNetworkSpeedLimitService::LimitSpeed(int, int)";
        "OHOS::Wifi::BlockConnectService::ShouldAutoConnect(const WifiDeviceConfig&)";
        "OHOS::Wifi::BlockConnectService::UpdateAllNetworkSelectStatus()";
        "OHOS::Wifi::BlockConnectService::EnableNetworkSelectStatus(int)";
        "OHOS::Wifi::BlockConnectService::UpdateNetworkSelectStatus(int, OHOS::Wifi::DisabledReason, int)";
        "OHOS::Wifi::BlockConnectService::UpdateNetworkSelectStatus(int, OHOS::Wifi::DisabledReason)";
        "OHOS::Wifi::BlockConnectService::IsFrequentDisconnect(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, int)";
        "OHOS::Wifi::BlockConnectService::IsWrongPassword(int)";
        "OHOS::Wifi::BlockConnectService::GetInstance()";
        "OHOS::Wifi::NetworkBlockListManager::GetInstance()";
        "OHOS::Wifi::NetworkBlockListManager::AddWifiBlocklist(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::Wifi::NetworkBlockListManager::IsInWifiBlocklist(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::Wifi::NetworkBlockListManager::AddAbnormalWifiBlocklist(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::Wifi::NetworkBlockListManager::CleanAbnormalWifiBlocklist()";
        "OHOS::Wifi::NetworkBlockListManager::CleanTempWifiBlockList()";
        "OHOS::Wifi::NetworkBlockListManager::IsInAbnormalWifiBlocklist(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::Wifi::NetworkBlockListManager::IsInTempWifiBlockList(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::Wifi::NetworkBlockListManager::IsFailedMultiTimes(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::Wifi::NetworkBlockListManager::RemoveWifiBlocklist(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::Wifi::WifiAppStateAware::GetInstance()";
        "OHOS::Wifi::WifiAppStateAware::Connect()";
        "OHOS::Wifi::WifiAppStateAware::InitAppStateAware(OHOS::Wifi::WifiAppStateAwareCallbacks const&)";
        "OHOS::Wifi::WifiAppStateAware::RegisterAppStateObserver()";
        "OHOS::Wifi::WifiAppStateAware::UnSubscribeAppState()";
        "OHOS::Wifi::WifiAppStateAware::OnForegroundAppChanged(const AppExecFwk::AppStateData &, const int)";
        "OHOS::Wifi::WifiAppStateAware::GetProcessRunningInfos(std::vector<AppExecFwk::RunningProcessInfo> &)";
        "OHOS::Wifi::WifiAppStateAware::GetForegroundApp()";
        "OHOS::Wifi::WifiAppStateAware::IsForegroundApp(int)";
        "OHOS::Wifi::WifiAppStateAware::IsForegroundApp(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::Wifi::WifiAppStateAware::GetRunningProcessNameByPid(const int, const int)";
        "OHOS::Wifi::WifiChannelHelper::GetInstance()";
        "OHOS::Wifi::WifiChannelHelper::GetValidBands(std::__h::vector<OHOS::Wifi::BandType, std::__h::allocator<OHOS::Wifi::BandType>>&)";
        "OHOS::Wifi::WifiChannelHelper::SetValidChannels(std::__h::map<OHOS::Wifi::BandType, std::__h::vector<int, std::__h::allocator<int>>, std::__h::less<OHOS::Wifi::BandType>, std::__h::allocator<std::__h::pair<OHOS::Wifi::BandType const, std::__h::vector<int, std::__h::allocator<int>>>>> const&)";
        "OHOS::Wifi::WifiChannelHelper::GetValidChannels(std::__h::map<OHOS::Wifi::BandType, std::__h::vector<int, std::__h::allocator<int>>, std::__h::less<OHOS::Wifi::BandType>, std::__h::allocator<std::__h::pair<OHOS::Wifi::BandType const, std::__h::vector<int, std::__h::allocator<int>>>>>&)";
        "OHOS::Wifi::WifiChannelHelper::UpdateValidChannels(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, int)";
        "OHOS::Wifi::WifiChannelHelper::GetAvailableScanFreqs(OHOS::Wifi::ScanBandType, std::__h::vector<int, std::__h::allocator<int>>&)";
        "OHOS::Wifi::WifiChannelHelper::IsFreqDbac(int, int)";
        "OHOS::Wifi::WifiChannelHelper::IsChannelDbac(int, int)";
        "OHOS::Wifi::WifiChannelHelper::TransformFrequencyIntoChannel(const std::vector<int> &, std::vector<int> &)";
        "OHOS::Wifi::WifiChannelHelper::TransformFrequencyIntoChannel(int)";
        "OHOS::Wifi::WifiChannelHelper::TransformChannelToFrequency(int)";
        "OHOS::Wifi::WifiChannelHelper::TransformFreqToBand(int)";
        "OHOS::Wifi::WifiChannelHelper::TransformChannelToBand(int)";
        "OHOS::Wifi::WifiChannelHelper::IsValid5GHz(int)";
        "OHOS::Wifi::WifiChannelHelper::IsValid24GHz(int)";
        "OHOS::Wifi::WifiChannelHelper::IsValid24GChannel(int)";
        "OHOS::Wifi::WifiChannelHelper::IsValid5GChannel(int)";
        "OHOS::Wifi::WifiCmdClient::GetInstance()";
        "OHOS::Wifi::WifiCmdClient::SendCmdToDriver(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&) const";
        "OHOS::Wifi::WifiConfigUpdate::SaveWifiConfig(char const*, char const*, char const*)";
        "OHOS::Wifi::WifiConfigUpdate::handle_";
        "OHOS::Wifi::WifiCountryCodeManager::GetInstance()";
        "OHOS::Wifi::WifiCountryCodeManager::Init()";
        "OHOS::Wifi::WifiCountryCodeManager::GetStaCallback() const";
        "OHOS::Wifi::WifiCountryCodeManager::GetApCallback() const";
        "OHOS::Wifi::WifiCountryCodeManager::GetWifiCountryCode(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&) const";
        "OHOS::Wifi::WifiCountryCodeManager::SetWifiCountryCodeFromExternal(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::Wifi::WifiCountryCodeManager::RegisterWifiCountryCodeChangeListener(std::__h::shared_ptr<OHOS::Wifi::IWifiCountryCodeChangeListener> const&)";
        "OHOS::Wifi::WifiCountryCodeManager::UnregisterWifiCountryCodeChangeListener(std::__h::shared_ptr<OHOS::Wifi::IWifiCountryCodeChangeListener> const&)";
        "OHOS::Wifi::WifiCountryCodeManager::DealStaOpened(int)";
        "OHOS::Wifi::WifiCountryCodeManager::DealStaStopped(int)";
        "OHOS::Wifi::WifiCountryCodeManager::TriggerUpdateWifiCountryCode(int)";
        "OHOS::Wifi::WifiCountryCodePolicy::CalculateWifiCountryCode(std::string &)";
        "OHOS::Wifi::WifiDataShareHelperUtils::GetInstance()";
        "OHOS::Wifi::WifiDataShareHelperUtils::CheckIfSettingsDataReady()";
        "OHOS::Wifi::WifiDataShareHelperUtils::GetLoactionDataShareUri()";
        "OHOS::Wifi::WifiDataShareHelperUtils::Query(OHOS::Uri&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&, bool)";
        "OHOS::Wifi::WifiDataShareHelperUtils::Insert(Uri &, const std::string &, const std::string &)";
        "OHOS::Wifi::WifiDataShareHelperUtils::Update(OHOS::Uri&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::Wifi::WifiDataShareHelperUtils::RegisterObserver(OHOS::Uri const&, OHOS::sptr<OHOS::AAFwk::IDataAbilityObserver> const&)";
        "OHOS::Wifi::WifiDataShareHelperUtils::UnRegisterObserver(OHOS::Uri const&, OHOS::sptr<OHOS::AAFwk::IDataAbilityObserver> const&)";
        "OHOS::Wifi::WifiInternalEventDispatcher::GetInstance()";
        "OHOS::Wifi::WifiInternalEventDispatcher::Init()";
        "OHOS::Wifi::WifiInternalEventDispatcher::SendSystemNotifyMsg()";
        "OHOS::Wifi::WifiInternalEventDispatcher::AddBroadCastMsg(OHOS::Wifi::WifiEventCallbackMsg const&)";
        "OHOS::Wifi::WifiInternalEventDispatcher::Exit()";
        "OHOS::Wifi::WifiInternalEventDispatcher::Run(WifiInternalEventDispatcher &, const WifiEventCallbackMsg &)";
        "OHOS::Wifi::WifiInternalEventDispatcher::AddStaCallback(OHOS::sptr<OHOS::IRemoteObject> const&, OHOS::sptr<OHOS::Wifi::IWifiDeviceCallBack> const&, int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int, int)";
        "OHOS::Wifi::WifiInternalEventDispatcher::SetSingleStaCallback(OHOS::sptr<OHOS::Wifi::IWifiDeviceCallBack> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int)";
        "OHOS::Wifi::WifiInternalEventDispatcher::GetSingleStaCallback(int) const";
        "OHOS::Wifi::WifiInternalEventDispatcher::RemoveStaCallback(OHOS::sptr<OHOS::IRemoteObject> const&, int)";
        "OHOS::Wifi::WifiInternalEventDispatcher::HasStaRemote(OHOS::sptr<OHOS::IRemoteObject> const&, int)";
        "OHOS::Wifi::WifiInternalEventDispatcher::AddScanCallback(OHOS::sptr<OHOS::IRemoteObject> const&, OHOS::sptr<OHOS::Wifi::IWifiScanCallback> const&, int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int, int)";
        "OHOS::Wifi::WifiInternalEventDispatcher::SetSingleScanCallback(OHOS::sptr<OHOS::Wifi::IWifiScanCallback> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int)";
        "OHOS::Wifi::WifiInternalEventDispatcher::GetSingleScanCallback(int) const";
        "OHOS::Wifi::WifiInternalEventDispatcher::RemoveScanCallback(OHOS::sptr<OHOS::IRemoteObject> const&, int)";
        "OHOS::Wifi::WifiInternalEventDispatcher::HasScanRemote(OHOS::sptr<OHOS::IRemoteObject> const&, int)";
        "OHOS::Wifi::WifiInternalEventDispatcher::AddHotspotCallback(OHOS::sptr<OHOS::IRemoteObject> const&, OHOS::sptr<OHOS::Wifi::IWifiHotspotCallback> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int)";
        "OHOS::Wifi::WifiInternalEventDispatcher::SetSingleHotspotCallback(OHOS::sptr<OHOS::Wifi::IWifiHotspotCallback> const&, int)";
        "OHOS::Wifi::WifiInternalEventDispatcher::GetSingleHotspotCallback(int) const";
        "OHOS::Wifi::WifiInternalEventDispatcher::RemoveHotspotCallback(OHOS::sptr<OHOS::IRemoteObject> const&, int)";
        "OHOS::Wifi::WifiInternalEventDispatcher::AddP2pCallback(OHOS::sptr<OHOS::IRemoteObject> const&, OHOS::sptr<OHOS::Wifi::IWifiP2pCallback> const&, int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int)";
        "OHOS::Wifi::WifiInternalEventDispatcher::SetSingleP2pCallback(OHOS::sptr<OHOS::Wifi::IWifiP2pCallback> const&)";
        "OHOS::Wifi::WifiInternalEventDispatcher::RemoveP2pCallback(OHOS::sptr<OHOS::IRemoteObject> const&)";
        "OHOS::Wifi::WifiInternalEventDispatcher::InvokeScanCallbacks(const WifiEventCallbackMsg &)";
        "OHOS::Wifi::WifiInternalEventDispatcher::InvokeDeviceCallbacks(const WifiEventCallbackMsg &)";
        "OHOS::Wifi::WifiInternalEventDispatcher::InvokeHotspotCallbacks(const WifiEventCallbackMsg &)";
        "OHOS::Wifi::WifiInternalEventDispatcher::InvokeP2pCallbacks(const WifiEventCallbackMsg &)";
        "OHOS::Wifi::WifiInternalEventDispatcher::VerifyRegisterCallbackPermission(int)";
        "OHOS::Wifi::WifiInternalEventDispatcher::ResetAllFrozenApp()";
        "OHOS::Wifi::WifiInternalEventDispatcher::IsAppFrozen(int)";
        "OHOS::Wifi::WifiInternalEventDispatcher::SetAppFrozen(std::__h::set<int, std::__h::less<int>, std::__h::allocator<int>>, bool)";
        "OHOS::Wifi::WifiNetAgent::GetInstance()";
        "OHOS::Wifi::WifiNetAgent::RegisterNetSupplier()";
        "OHOS::Wifi::WifiNetAgent::RegisterNetSupplierCallback()";
        "OHOS::Wifi::WifiNetAgent::UnregisterNetSupplier()";
        "OHOS::Wifi::WifiNetAgent::UpdateNetSupplierInfo(const sptr<NetManagerStandard::NetSupplierInfo> &)";
        "OHOS::Wifi::WifiNetAgent::AddRoute(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, int)";
        "OHOS::Wifi::WifiNetAgent::OnStaMachineUpdateNetLinkInfo(OHOS::Wifi::IpInfo, OHOS::Wifi::IpV6Info, OHOS::Wifi::WifiProxyConfig, int)";
        "OHOS::Wifi::WifiNetAgent::OnStaMachineUpdateNetSupplierInfo(OHOS::sptr<OHOS::NetManagerStandard::NetSupplierInfo>)";
        "OHOS::Wifi::WifiNetAgent::OnStaMachineWifiStart()";
        "OHOS::Wifi::WifiNetAgent::OnStaMachineNetManagerRestart(OHOS::sptr<OHOS::NetManagerStandard::NetSupplierInfo>, int)";
        "OHOS::Wifi::WifiNetAgent::RestoreWifiConnection()";
        "OHOS::Wifi::WifiNetAgent::InitWifiNetAgent(OHOS::Wifi::WifiNetAgentCallbacks const&)";
        "OHOS::Wifi::WifiNetAgent::RequestNetwork(const int, const int)";
        "OHOS::Wifi::WifiNetAgent::GetSupplierId()";
        "OHOS::Wifi::WifiNetAgent::ResetSupplierId()";
        "OHOS::Wifi::WifiDumper::DeviceDump(std::__h::function<void (std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)>, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        "OHOS::Wifi::WifiDumper::ScanDump(std::__h::function<void (std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)>, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        "OHOS::Wifi::WifiDumper::P2pDump(std::__h::function<void (std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)>, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        "OHOS::Wifi::WifiDumper::HotspotDump(std::__h::function<void (std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)>, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        "OHOS::Wifi::NetStateObserver::NetStateObserver()";
        "OHOS::Wifi::NetStateObserver::~NetStateObserver()";
        "OHOS::Wifi::NetStateObserver::StartNetStateObserver(OHOS::sptr<OHOS::Wifi::NetStateObserver>&)";
        "OHOS::Wifi::NetStateObserver::StopNetStateObserver(OHOS::sptr<OHOS::Wifi::NetStateObserver>&)";
        "OHOS::Wifi::NetStateObserver::SetNetStateCallback(std::__h::function<void (OHOS::Wifi::EnumNetWorkState, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>)> const&)";
        "OHOS::Wifi::NetStateObserver::OnNetDetectionResultChanged(NetManagerStandard::NetDetectionResultCode, const std::string &)";
        "OHOS::Wifi::NetStateObserver::GetWifiNetId()";
        "OHOS::Wifi::NetStateObserver::StartWifiDetection()";
        "OHOS::Wifi::WifiNetLink::GetInstance()";
        "OHOS::Wifi::WifiNetLink::InitWifiNetLink(WifiNetLinkCallbacks const&)";
        "OHOS::Wifi::WifiNetLink::SendCmdKernel(int32_t, int32_t, int32_t)";
        "OHOS::Wifi::WifiNetLink::StartMonitor(int32_t)";
        "OHOS::Wifi::WifiNetLink::ProcessQueryTcp(int32_t)";
        "OHOS::Wifi::WifiNetLink::SendQoeCmd(int, int)";
        "OHOS::Wifi::WifiNetLink::ProcessReportMsg(int32_t, int32_t)";
        "OHOS::Wifi::WifiNotificationUtil::GetInstance()";
        "OHOS::Wifi::WifiNotificationUtil::PublishWifiNotification(OHOS::Wifi::WifiNotificationId, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&, OHOS::Wifi::WifiNotificationStatus)";
        "OHOS::Wifi::WifiNotificationUtil::CancelWifiNotification(OHOS::Wifi::WifiNotificationId)";
        "OHOS::Wifi::WifiNotificationUtil::StartAbility(OHOS::AAFwk::Want&)";
        "OHOS::Wifi::WifiNotificationUtil::ShowDialog(OHOS::Wifi::WifiDialogType)";
        "OHOS::Wifi::WifiNotificationUtil::ShowSettingsDialog(OHOS::Wifi::WifiDialogType, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>)";
        "OHOS::Wifi::WifiNetStatsManager::StopNetStats()";
        "OHOS::Wifi::WifiNetStatsManager::StartNetStats()";
        "OHOS::Wifi::WifiSystemAbilityListener::SubscribeSystemAbility(int)";
        "OHOS::Wifi::WifiSystemAbilityListener::UnSubscribeSystemAbility(int)";
        "OHOS::Wifi::WifiSystemAbilityListener::OnSystemAbilityChanged(int)";
        "OHOS::Wifi::WifiSystemAbilityListener::WifiSystemAbilityListener()";
        "OHOS::Wifi::WifiSystemAbilityListener::~WifiSystemAbilityListener()";
        "OHOS::Wifi::WifiProtectManager::GetInstance()";
        "OHOS::Wifi::WifiProtectManager::IsValidProtectMode(const WifiProtectMode &)";
        "OHOS::Wifi::WifiProtectManager::GetNearlyProtectMode()";
        "OHOS::Wifi::WifiProtectManager::InitWifiProtect(const WifiProtectType &, const std::string &)";
        "OHOS::Wifi::WifiProtectManager::GetWifiProtect(const WifiProtectMode &, const std::string)";
        "OHOS::Wifi::WifiProtectManager::PutWifiProtect(const std::string &)";
        "OHOS::Wifi::WifiProtectManager::IsHeldWifiProtect(const std::string &)";
        "OHOS::Wifi::WifiProtectManager::ChangeToPerfMode(bool)";
        "OHOS::Wifi::WifiProtectManager::HandleScreenStateChanged(bool)";
        "OHOS::Wifi::WifiProtectManager::UpdateWifiClientConnected(bool)";
        "OHOS::Wifi::WifiProtectManager::SetLowLatencyMode(bool)";
        "OHOS::Wifi::WifiProtectManager::ChangeWifiPowerMode()";
        "OHOS::Wifi::WifiProtectManager::RegisterAppStateObserver()";
        "OHOS::Wifi::WifiProtectManager::OnAppDied(const std::string)";
        "OHOS::Wifi::WifiProtectManager::OnAppForegroudChanged(const std::string &, int)";
    };
    local:
        *;
};