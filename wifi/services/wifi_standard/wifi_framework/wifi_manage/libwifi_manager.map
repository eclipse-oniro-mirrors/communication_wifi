1.0 {
    global:
        "*UnloadService*";
        "*CheckAndEnforceService*";
   extern "C++" {
        "OHOS::Wifi::WifiManager::GetInstance()";
        "OHOS::Wifi::WifiManager::Init()";
        "OHOS::Wifi::WifiManager::GetSupportedFeatures(long&) const";
        "OHOS::Wifi::WifiManager::GetWifiScanManager()";
        "OHOS::Wifi::WifiManager::GetWifiStaManager()";
        "OHOS::Wifi::WifiManager::AddSupportedFeatures(OHOS::Wifi::WifiFeatures)";
        "OHOS::Wifi::WifiManager::GetWifiTogglerManager()";
        "OHOS::Wifi::WifiManager::GetWifiHotspotManager()";
        "OHOS::Wifi::WifiManager::GetWifiP2pManager()";
        "OHOS::Wifi::WifiManager::GetWifiEventSubscriberManager()";
        "OHOS::Wifi::WifiManager::GetWifiMultiVapManager()";
        "OHOS::Wifi::WifiManager::GetRptInterface(int)";
        "OHOS::Wifi::WifiManager::InstallPacketFilterProgram(int, int)";
        "OHOS::Wifi::WifiManager::OnNativeProcessStatusChange(int)";
        "OHOS::Wifi::WifiManager::StopGetCacResultAndLocalCac(int)";
        "OHOS::Wifi::WifiServiceManager::GetInstance()";
        "OHOS::Wifi::WifiServiceManager::Init()";
        "OHOS::Wifi::WifiServiceManager::GetP2pServiceInst()";
        "OHOS::Wifi::WifiServiceManager::GetEnhanceServiceInst()";
        "OHOS::Wifi::WifiServiceManager::UninstallAllService()";
        "OHOS::Wifi::WifiServiceManager::CheckPreLoadService()";
        "OHOS::Wifi::WifiServiceManager::GetStaServiceInst(int)";
        "OHOS::Wifi::WifiServiceManager::GetSelfCureServiceInst(int)";
        "OHOS::Wifi::WifiServiceManager::GetWifiProServiceInst(int)";
        "OHOS::Wifi::WifiServiceManager::GetScanServiceInst(int)";
        "OHOS::Wifi::WifiServiceManager::GetApServiceInst(int)";
        "OHOS::Wifi::WifiServiceManager::ApServiceSetHotspotConfig(OHOS::Wifi::HotspotConfig const&, int)";
        "OHOS::Wifi::WifiTogglerManager::WifiToggled(int, int)";
        "OHOS::Wifi::WifiTogglerManager::SoftapToggled(int, int)";
        "OHOS::Wifi::WifiTogglerManager::ScanOnlyToggled(int)";
        "OHOS::Wifi::WifiTogglerManager::AirplaneToggled(int)";
        "OHOS::Wifi::WifiTogglerManager::HasAnyApRuning()";
        "OHOS::Wifi::WifiTogglerManager::StartWifiToggledTimer()";
        "OHOS::Wifi::WifiTogglerManager::StopWifiToggledTimer()";
        "OHOS::Wifi::WifiTogglerManager::GetControllerMachine()";
        "OHOS::Wifi::WifiTogglerManager::ForceStopWifi()";
        "OHOS::Wifi::WifiTogglerManager::SatelliteToggled(int)";
        "OHOS::Wifi::WifiTogglerManager::IsSatelliteStateStart()";
        "OHOS::Wifi::WifiTogglerManager::GetConcreteCallback()";
        "OHOS::Wifi::WifiTogglerManager::GetSoftApCallback()";
        "OHOS::Wifi::WifiTogglerManager::GetMultiStaCallback()";
        "OHOS::Wifi::WifiTogglerManager::StartSemiWifiToggledTimer()";
        "OHOS::Wifi::WifiTogglerManager::StopSemiWifiToggledTimer()";
        "OHOS::Wifi::ConcreteClientModeManager:RegisterCallback(const ConcreteModeCallback&)";
        "OHOS::Wifi::ConcreteClientModeManager::SetRole(ConcreteManagerRole role)";
        "OHOS::Wifi::ConcreteClientModeManager::InitConcreteManager()";
        "OHOS::Wifi::ConcreteClientModeManager::GetConcreteMachine()";
        "OHOS::Wifi::ConcreteMangerMachine::InitConcreteMangerMachine()";
        "OHOS::Wifi::ConcreteMangerMachine::RegisterCallback(ConcreteModeCallback&)";
        "OHOS::Wifi::ConcreteMangerMachine::SetTargetRole(ConcreteManagerRole role)";
        "OHOS::Wifi::MultiStaManager::RegisterCallback(const MultiStaModeCallback&)";
        "OHOS::Wifi::MultiStaManager::InitMultiStaManager()";
        "OHOS::Wifi::MultiStaManager::GetMultiStaMachine()";
        "OHOS::Wifi::MultiStaManager::GetRole()";
        "OHOS::Wifi::MultiStaManager::SetRole(Role)";
        "OHOS::Wifi::MultiStaStateMachine::InitMultiStaStateMachine()";
        "OHOS::Wifi::MultiStaStateMachine::RegisterCallback(const MultiStaModeCallback &callbacks)";
        "OHOS::Wifi::SoftApManager::RegisterCallback(const SoftApModeCallback &callbacks)";
        "OHOS::Wifi::SoftApManager::InitSoftapManager()";
        "OHOS::Wifi::SoftApManager::GetSoftapMachine()";
        "OHOS::Wifi::SoftApManager::GetRole()";
        "OHOS::Wifi::SoftApManager::SetRole(Role)";
        "OHOS::Wifi::SoftapManagerMachine::InitSoftapManagerMachine(Role)";
        "OHOS::Wifi::SoftapManagerMachine::RegisterCallback(const SoftApModeCallback &callbacks)";
        "OHOS::Wifi::WifiControllerMachine::InitWifiControllerMachine()";
        "OHOS::Wifi::WifiControllerMachine::RemoveConcreteManager(int)";
        "OHOS::Wifi::WifiControllerMachine::RemoveMultiStaManager(int)";
        "OHOS::Wifi::WifiControllerMachine::HandleStaClose(int id)";
        "OHOS::Wifi::WifiControllerMachine::HandleWifi2Close(int id)";
        "OHOS::Wifi::WifiControllerMachine::HandleStaStart(int id)";
        "OHOS::Wifi::WifiControllerMachine::HandleWifi2Start(int id)";
        "OHOS::Wifi::WifiControllerMachine::HandleStaSemiActive(int id)";
        "OHOS::Wifi::WifiControllerMachine::HandleConcreteStop(int id)";
        "OHOS::Wifi::WifiControllerMachine::RmoveSoftapManager(int id)";
        "OHOS::Wifi::WifiControllerMachine::HandleSoftapStop(int id)";
        "OHOS::Wifi::WifiControllerMachine::ShutdownWifi(bool shutDownAp = true)";
        "OHOS::Wifi::WifiControllerMachine::ClearWifiStartFailCount()";
        "OHOS::Wifi::WifiControllerMachine::StartSoftapCloseTimer()";
        "OHOS::Wifi::WifiControllerMachine::StopSoftapCloseTimer()";
        "OHOS::Wifi::WifiEventSubscriberManager::GetAirplaneModeByDatashare()";
        "OHOS::Wifi::WifiEventSubscriberManager::GetWifiAllowSemiActiveByDatashare()";
        "OHOS::Wifi::WifiEventSubscriberManager::GetLocationModeByDatashare()";
        "OHOS::Wifi::WifiEventSubscriberManager::DealLocationModeChangeEvent()";
        "OHOS::Wifi::WifiEventSubscriberManager::CheckAndStartStaByDatashare()";
        "OHOS::Wifi::WifiEventSubscriberManager::IsMdmForbidden()";
        "OHOS::Wifi::WifiEventSubscriberManager::OnSystemAbilityChanged(int systemAbilityId, bool add) override";
        "OHOS::Wifi::WifiHotspotManager::GetApCallback()";
        "OHOS::Wifi::WifiHotspotManager::StopUnloadApSaTimer()";
        "OHOS::Wifi::WifiHotspotManager::StartUnloadApSaTimer()";
        "OHOS::Wifi::WifiHotspotManager::CloseApService(int)";
        "OHOS::Wifi::WifiLocationModeObserver::OnChange() override";
        "OHOS::Wifi::WifiMultiVapManager::CheckCanConnectDevice()";
        "OHOS::Wifi::WifiMultiVapManager::CheckCanUseP2p()";
        "OHOS::Wifi::WifiMultiVapManager::CheckCanUseSoftAp()";
        "OHOS::Wifi::WifiMultiVapManager::VapConflictReport()";
        "OHOS::Wifi::WifiP2pManager::GetP2pCallback()";
        "OHOS::Wifi::WifiP2pManager::AutoStartP2pService()";
        "OHOS::Wifi::WifiP2pManager::AutoStopP2pService()";
        "OHOS::Wifi::WifiP2pManager::StopUnloadP2PSaTimer()";
        "OHOS::Wifi::WifiP2pManager::StartUnloadP2PSaTimer()";
        "OHOS::Wifi::WifiP2pManager::CloseP2pService()";
        "OHOS::Wifi::WifiScanManager::GetScanCallback()";
        "OHOS::Wifi::WifiScanManager::GetStaCallback() const";
        "OHOS::Wifi::WifiScanManager::StopUnloadScanSaTimer()";
        "OHOS::Wifi::WifiScanManager::StartUnloadScanSaTimer()";
        "OHOS::Wifi::WifiScanManager::CheckAndStartScanService(int)";
        "OHOS::Wifi::WifiScanManager::CheckAndStopScanService(int)";
        "OHOS::Wifi::WifiScanManager::TryToStartScanService(int)";
        "OHOS::Wifi::WifiScanManager::CloseScanService(int)";
        "OHOS::Wifi::WifiScanManager::DealStaOpened(int)";
        "OHOS::Wifi::WifiStaManager::CloseStaService(int)";
        "OHOS::Wifi::WifiStaManager::DealStaOpened(int instId)";
        "OHOS::Wifi::WifiStaManager::DealStaStopped(int instId)";
        "OHOS::Wifi::WifiStaManager::GetStaCallback()";
        "OHOS::Wifi::WifiStaManager::StopUnloadStaSaTimer()";
        "OHOS::Wifi::WifiStaManager::StartUnloadStaSaTimer()";
        "OHOS::Wifi::WifiStaManager::StartSatelliteTimer()";
        "OHOS::Wifi::WifiStaManager::StopSatelliteTimer()";
        "OHOS::Wifi::WifiServiceScheduler::GetInstance()";
        "OHOS::Wifi::WifiCommonServiceManager::GetInstance()";
    };
    local:
        *;
};