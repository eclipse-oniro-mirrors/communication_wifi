1.0 {
    global:
        "*WifiP2PHalInterface*";
        "*WifiApHalInterface*";
        "*WifiChipHalInterface*";
        "*WifiStaHalInterface*";
        "*WifiSupplicantHalInterface*";
        "*GetFrequenciesByBand*";
        "*RemoveStaIface*";
        "*SetNetworkUpDown*";
        "*RemoveApIface*";
        "*CreateStaIface*";
        "*CreateApIface*";
        "*CreateP2pIface*";
        "*RemoveP2pIface*";
   extern "C++" {
        "OHOS::Wifi::HalDeviceManager::GetInstance()";
        "OHOS::Wifi::HalDeviceManager::HalDeviceManager()";
        "OHOS::Wifi::HalDeviceManager::~HalDeviceManager()";
        "OHOS::Wifi::Hid2dConnectConfig::GetDhcpMode() const";
        "OHOS::Wifi::HalDeviceManager::StartChipHdi()";
        "OHOS::Wifi::HalDeviceManager::StopChipHdi()";
        "OHOS::Wifi::HalDeviceManager::Scan(const std::string&, const ScanParams&)";
        "OHOS::Wifi::HalDeviceManager::StartPnoScan(const std::string&, const PnoScanParams&)";
        "OHOS::Wifi::HalDeviceManager::StopPnoScan(const std::string&)";
        "OHOS::Wifi::HalDeviceManager::GetScanInfos(const std::string &, std::vector<ScanResultsInfo> &)";
        "OHOS::Wifi::HalDeviceManager::GetConnectSignalInfo(const std::string &, SignalPollResult &);";
        "OHOS::Wifi::HalDeviceManager::SetPmMode(const std::string &, int)";
        "OHOS::Wifi::HalDeviceManager::SetDpiMarkRule(const std::string &, int, int, int)";
        "OHOS::Wifi::HalDeviceManager::SetStaMacAddress(const std::string &, const std::string &)";
        "OHOS::Wifi::HalDeviceManager::GetChipsetCategory(const std::string &, uint32_t &)";
        "OHOS::Wifi::HalDeviceManager::GetChipsetWifiFeatrureCapability(const std::string &, int &)";
        "OHOS::Wifi::HalDeviceManager::GetFrequenciesByBand(const std::string &, int32_t, std::vector<int> &)";
        "OHOS::Wifi::HalDeviceManager::SetPowerModel(const std::string &, int)";
        "OHOS::Wifi::HalDeviceManager:: SetTxPower(const std::string &, int)";
        "OHOS::Wifi::HalDeviceManager::GetPowerModel(const std::string &, int &)";
        "OHOS::Wifi::HalDeviceManager::SetWifiCountryCode(const std::string &, const std::string &)";
        "OHOS::Wifi::HalDeviceManager::SetApMacAddress(const std::string &, const std::string &)";
   };
    local:
        *;
};