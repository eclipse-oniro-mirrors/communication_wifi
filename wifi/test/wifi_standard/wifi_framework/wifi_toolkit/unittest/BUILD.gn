# Copyright (C) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/communication/wifi/wifi/wifi.gni")
module_output_path = "wifi/toolkit_test"

config("module_private_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "//commonlibrary/c_utils/base/include",
    "$WIFI_ROOT_DIR/test/wifi_standard/wifi_framework/wifi_toolkit/unittest",
  ]
}

ohos_unittest("toolkit_unittest") {
  module_out_path = module_output_path
  sources = [
    "$WIFI_ROOT_DIR/frameworks/native/src/wifi_p2p_msg.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/config/wifi_config_file_spec.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/config/wifi_settings.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log/log_helper.c",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper/arp_checker.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper/base_address.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper/dhcpd_interface.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper/dns_checker.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper/http_request.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper/if_config.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper/ip_tools.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper/ipv4_address.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper/mac_address.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper/network_interface.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper/raw_socket.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils/network_parser.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils/softap_parser.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils/wifi_app_parser.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils/wifi_encryption_util.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils/wifi_global_func.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils/xml_parser.cpp",
    "../../wifi_manage/wifi_sta/Mock/mock_dhcp_service.cpp",
    "arp_checker_test.cpp",
    "base_address_test.cpp",
    "dhcpd_interface_test.cpp",
    "http_request_test.cpp",
    "if_config_test.cpp",
    "ipv4_address_test.cpp",
    "mac_address_test.cpp",
    "network_interface_test.cpp",
    "network_parser_test.cpp",
    "raw_socket_test.cpp",
    "softap_parser_test.cpp",
    "wifi_app_parser_test.cpp",
    "wifi_config_file_test.cpp",
    "wifi_encryption_util_test.cpp",
    "wifi_global_func_test.cpp",
    "wifi_ip_tools_test.cpp",
    "wifi_log_helper_test.cpp",
    "wifi_settings_test.cpp",
    "xml_parser_test.cpp",
  ]

  include_dirs = [
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/config",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_sta",
    "$WIFI_ROOT_DIR/interfaces/inner_api",
    "$WIFI_ROOT_DIR/frameworks/native/interfaces",
    "$WIFI_ROOT_DIR/services/wifi_standard/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_common/wifi_country_code",
    "$WIFI_ROOT_DIR/utils/inc",
  ]

  ldflags = [
    "-fPIC",
    "--coverage",
    "-Wl,-E",
    "-Wl,-rpath=/system/lib/platformsdk",
    "-Wl,--wrap=RegisterDhcpClientCallBack",
    "-Wl,--wrap=StartDhcpClient",
    "-Wl,--wrap=StopDhcpClient",
    "-Wl,--wrap=RenewDhcpClient",
    "-Wl,--wrap=RegisterDhcpServerCallBack",
    "-Wl,--wrap=StartDhcpServer",
    "-Wl,--wrap=StopDhcpServer",
    "-Wl,--wrap=PutDhcpRange",
    "-Wl,--wrap=RemoveDhcpRange",
    "-Wl,--wrap=RemoveAllDhcpRange",
    "-Wl,--wrap=SetDhcpRange",
    "-Wl,--wrap=SetDhcpName",
    "-Wl,--wrap=GetDhcpClientInfos",
  ]

  deps = [
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit:wifi_toolkit",
    "$WIFI_ROOT_DIR/utils:wifi_utils",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]
  defines = [
    "private = public",
    "protected = public",
    "AP_INSTANCE_MAX_NUM=$wifi_feature_with_ap_num",
  ]
  external_deps = [
    "c_utils:utils",
    "dhcp:dhcp_sdk",
    "dhcp:dhcp_utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "jsoncpp:jsoncpp",
    "libxml2:libxml2",
    "netstack:http_client",
  ]
  if (wifi_feature_with_encryption) {
    external_deps += [ "huks:libhukssdk" ]
    defines += [ "FEATURE_ENCRYPTION_SUPPORT" ]
  }
  defines += [ "SUPPORT_RANDOM_MAC_ADDR" ]
  configs = [ ":module_private_config" ]

  part_name = "wifi"
  subsystem_name = "communication"
  testonly = true
}
