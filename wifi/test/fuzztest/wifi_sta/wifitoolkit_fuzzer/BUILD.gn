# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#####################hydra-fuzz###################
import("//build/config/features.gni")
import("//build/test.gni")
import("//foundation/communication/wifi/wifi/wifi.gni")

##############################fuzztest##########################################
ohos_fuzztest("WifiToolkitFuzzTest") {
  module_out_path = fuzz_test_output_path
  fuzz_config_file = "$WIFI_ROOT_DIR/test/fuzztest/wifi_sta/wifitoolkit_fuzzer"

  include_dirs = [
    "$WIFI_ROOT_DIR/base/utils",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/config",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_sta",
    "$WIFI_ROOT_DIR/interfaces/inner_api",
    "$WIFI_ROOT_DIR/frameworks/native/interfaces",
    "$WIFI_ROOT_DIR/services/wifi_standard/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_common/wifi_country_code",
    "$WIFI_ROOT_DIR/utils/inc",
    "$WIFI_ROOT_DIR/test/fuzztest/fuzz_common_func",
  ]

  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]

  defines = [
    "STA_INSTANCE_MAX_NUM=$wifi_feature_with_sta_num",
    "FEATURE_AP_SUPPORT",
    "FEATURE_STA_SUPPORT",
    "FEATURE_P2P_SUPPORT",
    "private=public",
  ]

  if (is_asan || use_clang_coverage) {
    defines += [ "DTFUZZ_TEST" ]
  }

  sources = [
    "$WIFI_ROOT_DIR/base/utils/wifi_app_parser.cpp",
    "$WIFI_ROOT_DIR/base/utils/xml_parser.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils/network_parser.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils/softap_parser.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils/wifi_encryption_util.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils/wifi_global_func.cpp",
    "wifitoolkit_fuzzer.cpp",
  ]

  deps = [
    "$WIFI_ROOT_DIR/base:wifi_base",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit:wifi_toolkit",
    "$WIFI_ROOT_DIR/utils:wifi_utils",
  ]

  external_deps = [
    "c_utils:utils",
    "dhcp:dhcp_sdk",
    "dhcp:dhcp_utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "jsoncpp:jsoncpp",
    "libxml2:libxml2",
    "netstack:http_client",
  ]

  part_name = "wifi"
  subsystem_name = "communication"
}
