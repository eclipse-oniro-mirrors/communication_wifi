# Copyright (C) 2025-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
 
import("//build/config/components/ets_frontend/ets2abc_config.gni")
import("//build/ohos.gni")
import("//build/ohos/taihe_idl/taihe.gni")
import("//foundation/communication/wifi/wifi/wifi.gni")    # 导入taihe.gni

copy_taihe_idl("copy_wifiManager") {
  sources = [ 
    "./idl/ohos.wifiManager.taihe"
  ]
}

subsystem_name = "communication"
part_name = "wifi"
taihe_generated_file_path_wifiManager = "$taihe_file_path/out/$subsystem_name/$part_name/wifiManager"

ohos_taihe("run_taihe") {
  taihe_generated_file_path = "${taihe_generated_file_path_wifiManager}"
  deps = [ ":copy_wifiManager" ]
  outputs = [
    "$taihe_generated_file_path/src/ohos.wifiManager.ani.cpp",
    "$taihe_generated_file_path/src/ohos.wifiManager.abi.c",
  ]
}

taihe_shared_library("wifiManager_taihe_native") { #调用taihe_shared_library模板编译so
  sanitize = {
    cfi = true  # Enable/disable control flow integrity detection
    boundary_sanitize = true  # Enable boundary san detection
    cfi_cross_dso = true  # Cross-SO CFI Checks
    debug = false
  }
  taihe_generated_file_path = "${taihe_generated_file_path_wifiManager}"
  part_name = "$part_name"
  subsystem_name = "$subsystem_name"
  include_dirs = [
    "$WIFI_ROOT_DIR/frameworks/ets/taihe/wifiManager/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log",
  ]

  sources = get_target_outputs(":run_taihe")                                          
  sources += [
    "src/ani_constructor.cpp",
    "src/ohos.wifiManager.impl.cpp",
    "src/wifi_callback_taihe.cpp",
    "src/wifi_errorcode_taihe.cpp"
  ]
  deps = [
    ":run_taihe",
    "$WIFI_ROOT_DIR/frameworks/native:wifi_sdk"
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "runtime_core:ani",
    "runtime_core:libarkruntime",
    "samgr:samgr_proxy",
    "ipc:ipc_single",
  ]
}

generate_static_abc("wifiManager_framework_abc") {                   #调用generate_static_abc编译abc
  base_url = "${taihe_generated_file_path_wifiManager}"                             #base_url直接设置为taihe_generated_file_path
  files = [ "${taihe_generated_file_path_wifiManager}/@ohos.wifiManager.ets" ]                #files传入生成的ets文件
  is_boot_abc = "True"
  device_dst_file = "/system/framework/wifiManager_framework_abc.abc"
  dependencies = [ ":run_taihe" ]                                             #编译abc依赖太和工具链调用
}

ohos_prebuilt_etc("wifiManager_framework_etc") {                            #调用ohos_prebuilt_etc将abc拷贝到/system/framework下
  source = "$target_out_dir/wifiManager_framework_abc.abc"           
  module_install_dir = "framework"
  part_name = "$part_name"
  subsystem_name = "$subsystem_name"
  deps = [ ":wifiManager_framework_abc" ]                                         #拷贝abc依赖编译abc
}

group("wifiManager_framework_taihe") {
  deps = [
    ":wifiManager_framework_etc",
    ":wifiManager_taihe_native"
  ]
}