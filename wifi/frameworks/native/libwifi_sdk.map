1.0 {
    global:
        Hid2d*;
        RegisterCfgChangCallback;
        UnregisterCfgChangCallback;
        EnableP2p;
        DisableP2p;
        GetP2pEnableStatus;
        DiscoverDevices;
        StopDiscoverDevices;
        DiscoverServices;
        StopDiscoverServices;
        StartP2pListen;
        StopP2pListen;
        CreateGroup;
        RemoveGroup;
        DeleteGroup;
        P2pConnect;
        P2pCancelConnect;
        GetCurrentGroup;
        GetP2pConnectedStatus;
        QueryP2pDevices;
        QueryP2pLocalDevice;
        QueryP2pGroups;
        RegisterP2pStateChangedCallback;
        RegisterP2pPersistentGroupsChangedCallback;
        RegisterP2pConnectionChangedCallback;
        RegisterP2pPeersChangedCallback;
        CheckCanUseP2p;
        SetMiracastSinkConfig;
        EnableHotspot;
        DisableHotspot;
        SetHotspotConfig;
        GetHotspotConfig;
        IsHotspotActive;
        GetStationList;
        GetStationNum;
        DisassociateSta;
        AddTxPowerInfo;
        SetBand;
        GetBand;
        IsWifiActive;
        EnableWifi;
        DisableWifi;
        Scan;
        GetScanInfoList;
        AddDeviceConfig;
        GetDeviceConfigs;
        GetDeviceConfig;
        RemoveDevice;
        SetWifiAccessList;
        AllowAutoConnect;
        DisableDeviceConfig;
        EnableDeviceConfig;
        ConnectTo;
        ConnectToDevice;
        Disconnect;
        GetLinkedInfo;
        GetSignalPollInfoArray;
        GetDisconnectedReason;
        GetDeviceMacAddress;
        GetApIfaceName;
        AdvanceScan;
        GetIpInfo;
        GetSignalLevel;
        SetLowLatencyMode;
        SetLowTxPower;
        SetDpiMarkRule;
        IsBandTypeSupported;
        Get5GHzChannelList;
        RegisterWifiEvent;
        UnRegisterWifiEvent;
        StartPortalCertification;
        EnableSemiWifi;
        GetWifiDetailState;
        UpdateNetworkLagInfo;
        FetchWifiSignalInfoForVoWiFi;
        IsSupportVoWifiDetect;
        SetVoWifiDetectMode;
        GetVoWifiDetectMode;
        SetVoWifiDetectPeriod;
        GetVoWifiDetectPeriod;
        GetMultiLinkedInfo;
        "*CompositeWifiFilter*";
        EnableLocalOnlyHotspot;
        DisableLocalOnlyHotspot;
        GetHotspotMode;
        GetLocalOnlyHotspotConfig;
        extern "C++" {
            "OHOS::Wifi::WifiDevice::GetInstance(int, int)";
            "OHOS::Wifi::WifiScan::GetInstance(int, int)";
            "OHOS::Wifi::WifiHotspot::GetInstance(int, int)";
            "OHOS::Wifi::WifiP2p::GetInstance(int)";
            OHOS::Wifi::WifiP2pLinkedInfo::*;
            OHOS::Wifi::WifiP2pDevice::*;
            "OHOS::Wifi::WifiAbilityStatusChange::Init(int)";
            VTT?for?OHOS::Wifi::WifiAbilityStatusChange;
            OHOS::Wifi::WifiP2pGroupInfo::*;
            OHOS::Wifi::WifiP2pConfig::*;
            OHOS::Wifi::WifiP2pServiceInfo::*;
            OHOS::Wifi::WifiP2pWfdInfo::*;
            OHOS::Wifi::WpsInfo::*;
            OHOS::Wifi::WifiP2pConfigInternal::*;
            OHOS::Wifi::WifiP2pServiceRequest::*;
            OHOS::Wifi::WifiP2pServiceResponse::*;
            OHOS::Wifi::P2pVendorConfig::*;
            "OHOS::Wifi::WifiAbilityStatusChange::OnRemoveSystemAbility(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
            "OHOS::Wifi::WifiAbilityStatusChange::OnAddSystemAbility(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
            "non-virtual thunk to OHOS::Wifi::WifiAbilityStatusChange::OnRemoveSystemAbility(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
            "non-virtual thunk to OHOS::Wifi::WifiAbilityStatusChange::OnAddSystemAbility(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
            "OHOS::Wifi::IpStrToArray(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, unsigned int*)";
            "OHOS::Wifi::IpArrayToStr(unsigned int const*)";
            "OHOS::Wifi::WifiEapConfig::Phase2MethodToStr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int const&)";
            "OHOS::Wifi::WifiEapConfig::Phase2MethodFromStr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
            OHOS::Wifi::NetworkSelection::*;
            "vtable for OHOS::Wifi::NetworkSelection::OrWifiFilter";
            "OHOS::Wifi::WifiP2pCallbackStub::OnRemoteRequest(uint32_t, MessageParcel &, MessageParcel &, MessageOption &)";
            "OHOS::Wifi::WifiP2pCallbackStub::OnP2pStateChanged(int)";
            "OHOS::Wifi::WifiP2pCallbackStub::OnP2pPersistentGroupsChanged()";
            "OHOS::Wifi::WifiP2pCallbackStub::OnP2pThisDeviceChanged(const WifiP2pDevice &)";
            "OHOS::Wifi::WifiP2pCallbackStub::OnP2pPeersChanged(const std::vector<WifiP2pDevice> &)";
            "OHOS::Wifi::WifiP2pCallbackStub::OnP2pPrivatePeersChanged(const std::string &)";
            "OHOS::Wifi::WifiP2pCallbackStub::OnP2pServicesChanged(const std::vector<WifiP2pServiceInfo> &)";
            "OHOS::Wifi::WifiP2pCallbackStub::OnP2pConnectionChanged(const WifiP2pLinkedInfo &)";
            "OHOS::Wifi::WifiP2pCallbackStub::OnP2pDiscoveryChanged(bool)";
            "OHOS::Wifi::WifiP2pCallbackStub::OnP2pActionResult(P2pActionCallback, ErrCode)";
            "OHOS::Wifi::WifiP2pCallbackStub::OnConfigChanged(CfgType, char*, int)";
            "OHOS::Wifi::WifiP2pCallbackStub::RegisterCallBack(const sptr<IWifiP2pCallback> &)";
            "OHOS::Wifi::WifiP2pCallbackStub::IsRemoteDied() const";
            "OHOS::Wifi::WifiP2pCallbackStub::SetRemoteDied(bool)";
            "OHOS::Wifi::WifiScanCallbackStub::OnRemoteRequest(uint32_t, IpcIo *)";
            "OHOS::Wifi::WifiScanCallbackStub::OnRemoteRequest(uint32_t, MessageParcel &, MessageParcel &, MessageOption &)";
            "OHOS::Wifi::WifiScanCallbackStub::OnWifiScanStateChanged(int)";
            "OHOS::Wifi::WifiScanCallbackStub::RegisterCallBack(const std::shared_ptr<IWifiScanCallback> &)";
            "OHOS::Wifi::WifiScanCallbackStub::RegisterCallBack(const sptr<IWifiScanCallback> &)";
            "OHOS::Wifi::WifiScanCallbackStub::IsRemoteDied() const";
            "OHOS::Wifi::WifiScanCallbackStub::SetRemoteDied(bool)";
            "OHOS::Wifi::WifiHotspotCallbackStub:: OnRemoteRequest(uint32_t, MessageParcel &, MessageParcel &, MessageOption &)";
            "OHOS::Wifi::WifiHotspotCallbackStub::RegisterCallBack(const sptr<IWifiHotspotCallback> &)";
            "OHOS::Wifi::WifiHotspotCallbackStub::OnHotspotStateChanged(int)";
            "OHOS::Wifi::WifiHotspotCallbackStub::OnHotspotStaJoin(const StationInfo &)";
            "OHOS::Wifi::WifiHotspotCallbackStub::OnHotspotStaLeave(const StationInfo &)";
            "OHOS::Wifi::WifiHotspotCallbackStub::IsRemoteDied() const";
            "OHOS::Wifi::WifiHotspotCallbackStub::SetRemoteDied(bool)";
            "OHOS::Wifi::WifiDeviceCallBackStub::OnRemoteRequest(uint32_t, MessageParcel &, MessageParcel &, MessageOption &)";
            "OHOS::Wifi::WifiDeviceCallBackStub::OnWifiStateChanged(int)";
            "OHOS::Wifi::WifiDeviceCallBackStub::OnWifiConnectionChanged(int, const WifiLinkedInfo &)";
            "OHOS::Wifi::WifiDeviceCallBackStub::OnWifiRssiChanged(int)";
            "OHOS::Wifi::WifiDeviceCallBackStub::OnWifiWpsStateChanged(int, const std::string &)";
            "OHOS::Wifi::WifiDeviceCallBackStub::OnStreamChanged(int)";
            "OHOS::Wifi::WifiDeviceCallBackStub::OnDeviceConfigChanged(ConfigChange)";
            "OHOS::Wifi::WifiDeviceCallBackStub::RegisterUserCallBack(const sptr<IWifiDeviceCallBack> &)";
            "OHOS::Wifi::WifiDeviceCallBackStub::IsRemoteDied() const";
            "OHOS::Wifi::WifiDeviceCallBackStub::SetRemoteDied(bool)";
            "vtable for OHOS::Wifi::NetworkSelection::CompositeWifiFilter";
            "OHOS::Wifi::WifiEapConfig::Str2EapMethod(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
            "OHOS::Wifi::Hid2dConnectConfig::GetSsid() const";
            "OHOS::Wifi::Hid2dConnectConfig::GetBssid() const";
            "OHOS::Wifi::Hid2dConnectConfig::GetPreSharedKey() const";
            "OHOS::Wifi::Hid2dConnectConfig::GetFrequency() const";
            "OHOS::Wifi::Hid2dConnectConfig::GetDhcpMode() const";
            "OHOS::Wifi::Hid2dConnectConfig::SetSsid(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
            "OHOS::Wifi::Hid2dConnectConfig::SetBssid(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
            "OHOS::Wifi::Hid2dConnectConfig::SetPreSharedKey(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
            "OHOS::Wifi::Hid2dConnectConfig::SetFrequency(int)";
            "OHOS::Wifi::Hid2dConnectConfig::SetDhcpMode(OHOS::Wifi::DhcpMode)";
            "vtable for OHOS::Wifi::NetworkSelection::AndWifiFilter";
        };
    local:
        *;
};